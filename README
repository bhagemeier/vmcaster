Vmcaster is a simple tool for managing and updating your published 
virtual machines image lists. Following the Hepix image list format.

Users of this application should read "security-related policy requirements for 
the generation and endorsement of trusted virtual machine (VM) images for use on 
the Grid". The URL is shown below.

   https://edms.cern.ch/document/1080777

This tool is designed to aid "endorsers" as defined in the security policy, 
and anyone who wants to publish virtual machine images in a way where 
tampering will be detected.

vmcaster was designed with the realization that users typically create new 
virtual machines images rarely but update them frequently. Most other tools 
for marking up image lists don't minimize the amount of data entry for 
updates. vmcaster attempts to be the first of a new generation of image 
list publishers. the tasks of updating an image and uploading a fresh signed 
imagelist have been made as painless as possible as these are the most common 
tasks.

Internally the application uses a simple sql database, sqlight for storing 
image lists and multiple back ends managing uploading of images / images lists 
using a facade pattern. This allows transfer protocol to be derived from the 
meta data of the image list and a configuration file, updates need less effort.


To update an Image:
~~~~~~~~~~~~~~~~~~~

First get a image list:

   $ wget https://dish.desy.de:2880/testing.smime  --no-check-certificate

Import it.

   $ vmcaster   --imagelist-import-smime testing.smime

Now we can select an image to update.

   $ vmcaster \
 --upload-image /var/lib/libvirt/images/hudson-slave-vm06.desy.de.img \
 --select-image 7b1aea46-8776-4447-9450-00e720fc042c

   
Shows the image list as it would be made.

   $ vmcaster  --select-imagelist 9b6fad19-d913-4cca-b77d-c4b4fcd9dc36  --imagelist-show      

# To update and sign image list.

   $ vmcaster  --select-imagelist 9b6fad19-d913-4cca-b77d-c4b4fcd9dc36  --upload-imagelist

# to list stored imagelists.

   $ vmcaster  --imagelist-list    



Basic image list management
~~~~~~~~~~~~~~~~~~~~~~~~~~~

List endorsers,

   $ vmcaster  --list-endorser 

Show JSON for endorsers.

   $ vmcaster   --select-endorser '/C=DE/O=GermanGrid/OU=DESY/CN=Owen Synge'  --endorser-show

Create an endorser 

   $ vmcaster   --add-endorser "/C=DE/O=GermanGrid/OU=DESY/CN=Owen Synge"

Add Key pair for endorser.

   $ vmcaster    --select-endorser "/C=DE/O=GermanGrid/OU=DESY/CN=Owen Synge"  \
      --endorser-key-set 'hv:email' --endorser-value 'owen.synge@desy.de' 

Create an image list.

   $ vmcaster  --imagelist-add e38a3fd2-0ed8-11e2-873a-001cc0beb420

To display your image list.

   $ vmcaster    --select-imagelist e38a3fd2-0ed8-11e2-873a-001cc0beb420  --imagelist-show

Binding endorser to an imagelist

   $ vmcaster  --imagelist-add-endorser  --select-endorser "/C=DE/O=GermanGrid/OU=DESY/CN=Owen Synge"  --select-imagelist 9b6fad19-d913-4cca-b77d-c4b4fcd9dc36

Unbinding endorser to an imagelist

   $ vmcaster  --imagelist-del-endorser  --select-endorser "/C=DE/O=GermanGrid/OU=DESY/CN=Owen Synge"  --select-imagelist 9b6fad19-d913-4cca-b77d-c4b4fcd9dc36


Add attributes to an image list

   $ vmcaster    --select-imagelist e38a3fd2-0ed8-11e2-873a-001cc0beb420 \
      --key-set-imagelist "dc:description"  \
      --key-value-imagelist "DESY Image List SHaring service" 


To delete an Image:

   $ vmcaster  --del-imagelist --select-imagelist 9b6fad19-d913-4cca-b77d-c4b4fcd9dc36


Upload images:

$ vmcaster \
 --upload-image sl6.cpio.bz2 \
 --select-image aa42ca85-179b-4873-b12e-32d549bf02b6 \
 --verbose --verbose --verbose 

Upload image lists:

$ vmcaster \
 --select-imagelist ab1754cd-7d59-4851-c333-c96cb6545aaa \
 --upload-imagelist \
 --verbose --verbose --verbose 



Configuration file.
~~~~~~~~~~~~~~~~~~

The configuration file for vmcaster is used to define the hosts and parameters 
needed to update images and imagelists on the servers publishing the image list.

The configuration file is expected system wide at "/etc/vmcaster/vmcaster.cfg" or per 
user at "~/.vmcaster.cfg". The image list is in ini/cfg format with all values being 
stored as json. Each section will map to one or more image lists and provides the 
necessary information to "vmcaster" to update and upload image lists.

The following section is taken from my image list management configuration.

   [dish.desy.de]
   server = "dish.desy.de"
   writeprotocol = "gsidcap"
   uriMatch = "https://dish.desy.de:2880/"
   uriReplace = "gsidcap://dcache-desy-gsidcap.desy.de:22128/pnfs/desy.de/desy/vmimages/"

This states that all image lists to be published on the server "dish.desy.de",
should be updated using the "gsidcap" protocol, and that all writes corresponding 
with a prefix of "https://dish.desy.de:2880/" should be updated using a prefix of
"gsidcap://dcache-desy-gsidcap.desy.de:22128/pnfs/desy.de/desy/vmimages/".

The following write protocols are currently supported: "scp" this is the standard 
file transfer tool from the openssh project. "gsidcap" for a long time this was the 
standard posix like write protocol for a file storage server called dCache which 
specializes in storing very large quantities of data at the lowest price possible.

   [foo]
   server = "gridvirt.desy.de"
   writeprotocol = "scp"
   uriMatch = "https://gridvirt.desy.de/"
   uriReplace = "root@vmic-virt-grid:/tmp/"

This is another example of a configuration section that is updated using the scp protocol,
rather than the "gsidcap" protocol previously described.

Environment Variables.
~~~~~~~~~~~~~~~~~~~~~

* HOME *

Used as a prefix for configuration files and certificates.

* DISH_KEY *

Path to the private key for the signing of image lists.

* DISH_CERT *

Path to the certificate for the signing of image lists.

* DISH_CFG *

Path to the configuration file for vmcaster.

* DISH_RDBMS *

Sqllight based connection string, Typically defaulting to 'sqlite:///dish.db'.
This URL refers to the current working directory, to use an absolute path with 
Sqlight, add an extra slash to the URL like syntax.

Road map
~~~~~~~

The database should be restructured so that images are not dependent on imagelists
as this would make it possible to share image metadata across imagelists and so 
image tests and production imagelists easier. The code should also be publishable 
into a message Queue service provided by a cloud provider allowing unpublished 
images to be shared.

Appendix
~~~~~~~

If this application is not suitable for your use case it should not be forgotten that 
SMIME and json are common standards and can be created in many ways. Below is an 
example of how to sign a message using SMIME.

   $ openssl smime her-cert.pem -encrypt -in my-message.txt
   
This may prove useful in the long term.
